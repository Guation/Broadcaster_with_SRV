From e5d4ed310ead1e7fe0f563b2450df79c248224f9 Mon Sep 17 00:00:00 2001
From: Guation <guation@163.com>
Date: Fri, 18 Jul 2025 16:40:49 +0800
Subject: [PATCH] srv patch

---
 .../bootstrap/standalone/StandaloneMain.java  | 41 +++++++++++++++++++
 1 file changed, 41 insertions(+)

diff --git a/bootstrap/standalone/src/main/java/com/rtm516/mcxboxbroadcast/bootstrap/standalone/StandaloneMain.java b/bootstrap/standalone/src/main/java/com/rtm516/mcxboxbroadcast/bootstrap/standalone/StandaloneMain.java
index 7f58fb3..7f5ac60 100644
--- a/bootstrap/standalone/src/main/java/com/rtm516/mcxboxbroadcast/bootstrap/standalone/StandaloneMain.java
+++ b/bootstrap/standalone/src/main/java/com/rtm516/mcxboxbroadcast/bootstrap/standalone/StandaloneMain.java
@@ -25,6 +25,11 @@ import java.net.InetSocketAddress;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.TimeUnit;
 
+import javax.naming.directory.Attribute;
+import javax.naming.directory.Attributes;
+import javax.naming.directory.DirContext;
+import javax.naming.directory.InitialDirContext;
+
 public class StandaloneMain {
     private static StandaloneConfig config;
     private static StandaloneLoggerImpl logger;
@@ -124,6 +129,7 @@ public class StandaloneMain {
 
     private static void updateSessionInfo(SessionInfo sessionInfo) {
         if (config.session().queryServer()) {
+            updateAddressInfo(sessionInfo);
             try {
                 InetSocketAddress addressToPing = new InetSocketAddress(sessionInfo.getIp(), sessionInfo.getPort());
                 BedrockPong pong = PingUtil.ping(addressToPing, 1500, TimeUnit.MILLISECONDS).get();
@@ -147,4 +153,39 @@ public class StandaloneMain {
             }
         }
     }
+
+    private static void updateAddressInfo(SessionInfo sessionInfo) {
+        if (config.session().sessionInfo().getPort() == 0) {
+            try {
+                String domain = "_minecraft._udp." + config.session().sessionInfo().getIp();
+                DirContext ctx = new InitialDirContext();
+                Attributes attrs = ctx.getAttributes(
+                    "dns:/" + domain,
+                    new String[]{"SRV"}
+                );
+                Attribute srvAttr = attrs.get("SRV");
+                if (srvAttr != null && srvAttr.size() != 0) {
+                    String recordStr = (String) srvAttr.get(0);
+                    String[] parts = recordStr.split("\\s+");
+                    if (parts.length == 4) {
+                        int port = Integer.parseInt(parts[2]);
+                        String target = parts[3].endsWith(".") ?
+                                parts[3].substring(0, parts[3].length() - 1) :
+                                parts[3];
+                        sessionInfo.setIp(target);
+                        sessionInfo.setPort(port);
+                        return;
+                    } else {
+                        sessionManager.logger().error("The SRV record cannot be parsed. " + recordStr);
+                    }
+                } else {
+                    sessionManager.logger().warn("There is no SRV record for " + domain);
+                }
+            } catch (Exception e) {
+                sessionManager.logger().error("Failed to retrieving SRV from hostname", e);
+            }
+            sessionInfo.setIp(config.session().sessionInfo().getIp());
+            sessionInfo.setPort(19132);
+        }
+    }
 }
-- 
2.34.1

